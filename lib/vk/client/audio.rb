module Vk
  class Client
    module Audio
      # Возвращает список аудиозаписей пользователя или группы.
      #
      # @param options [Hash]
      # * uid       -- id пользователя, которому принадлежат аудиозаписи (по умолчанию — текущий пользователь)
      # * gid       -- id группы, которой принадлежат аудиозаписи. Если указан параметр gid, uid игнорируется.
      # * album_id  -- id альбома, аудиозаписи которого необходимо вернуть (по умолчанию возвращаются аудиозаписи из всех альбомов).
      # * aids      -- перечисленные через запятую id аудиозаписей, входящие в выборку по uid или gid.
      # * need_user -- если этот параметр равен 1, сервер возвратит базовую информацию о владельце аудиозаписей в структуре user (id, photo, name, name_gen).
      # * count     -- количество возвращаемых аудиозаписей.
      # * offset    -- смещение относительно первой найденной аудиозаписи для выборки определенного подмножества.
      #
      # @return [Hashie::Mash] Возвращает массив из объектов с аудиозаписями пользователя, каждый из которых имеет поля aid, owner_id, artist, title, duration, url. Если у аудиозаписи есть текст, возвращается идентификатор текста lyrics_id. Если аудиозаписи присвоен альбом, возвращается идентификатор альбома album. owner_id равен id пользователя, если аудиозаписи принадлежат пользователю, или -id группы, если аудиозаписи принадлежат группе.
      def audio_get options = {}
        get "audio.get", options
      end

      # Возвращает информацию об аудиозаписях по их идентификаторам.
      #
      # @param options [Hash]
      # * audios    -- перечисленные через запятую идентификаторы – идущие через знак подчеркивания id пользователей, которым принадлежат аудиозаписи, и id самих аудиозаписей. Если аудиозапись принадлежит группе, то в качестве первого параметра используется -id группы.
      #
      # @return [Hashie::Mash] Возвращает массив из объектов с аудиозаписями пользователя, каждый из которых имеет поля aid, owner_id, artist, title, duration, url. Если у аудиозаписи есть текст, возвращается идентификатор текста lyrics_id. Если аудиозаписи присвоен альбом, возвращается идентификатор альбома album. owner_id равен id пользователя, если аудиозаписи принадлежат пользователю, или -id группы, если аудиозаписи принадлежат группе.
      #
      # @example Пример значения audios: 2_67859194,-683495_39822725,2_63937759.
      def audio_get_by_id options
        get "audio.getById", options
      end

      def audio_get_lyrics options
        get "audio.getLyrics", options
      end

      def audio_get_upload_server options
        get "audio.getUploadServer", options
      end

      def audio_save options
        get "audio.save", otptions
      end

      def audio_delete options
        get "audio.delete", options
      end

      def audio_edit options
        get "audio.edit", options
      end

      # Восстанавливает удаленную аудиозапись пользователя после удаления.
      #
      # @param options [Hash]
      # * *aid* -- id удаленной аудиозаписи.
      # * oid -- id владельца аудиозаписи. По умолчанию - id текущего пользователя.
      #
      # @return [Hahie::Mash] В случае успешного восстановления аудиозаписи возвращает структуру audio, которая имеет поля aid, owner_id, artist, title, url. Если время хранения удаленной аудиозаписи истекло (обычно это 20 минут), сервер вернет ошибку 202 (Cache expired).
      def audio_restore options
        get "audio.restore", options
      end

      # Изменяет порядок аудиозаписи, перенося ее между аудиозаписями, идентификаторы которых переданы параметрами after и before.
      #
      # @param options [Hash]
      # * *api_id* -- идентификатор приложения, присваивается при создании.
      # * *dig* -- подпись запроса по стандартной схеме. (http://vkontakte.ru/developers.php?o=-1&p=%D0%92%D0%B7%D0%B0%D0%B8%D0%BC%D0%BE%D0%B4%D0%B5%D0%B9%D1%81%D1%82%D0%B2%D0%B8%D0%B5+%D0%BF%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D1%8F+%D1%81+API)
      # * *v* -- версия API, текущая версия равна 2.0
      # * *aid* -- id аудиозаписи, порядок которой изменяется
      # * *after* -- id аудиозаписи, после которой нужно поместить аудиозапись. Если аудиозапись переносится в начало, параметр может быть равен нулю.
      # * *before* -- id аудиозаписи, перед которой нужно поместить аудиозапись. Если аудиозапись переносится в конец, параметр может быть равен нулю.
      # * oid -- id владельца изменяемой аудиозаписи. По умолчанию - id текущего пользователя.
      # * test_mode -- если этот параметр равен 1, разрешает тестовые запросы к данным приложения. При этом аутентификация не проводится и считается, что текущий пользователь – это автор приложения. Это позволяет тестировать приложение без загрузки его на сайт. По умолчанию 0.
      # * _format_ -- api автоматически устанавливает его в json
      def audio_reorder options
        options = options.merge :format => 'JSON'
        get "audio.reorder", options
      end
    end
  end
end
